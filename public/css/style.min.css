.table-block{font-feature-settings:"tnum" on,"lnum" on}.table-block__title-2{padding:0 0 15px!important;letter-spacing:.01em}.table-block__date{display:inline-flex;justify-content:flex-start;align-items:center;gap:10px;font-weight:400;font-size:16px;line-height:150%;color:#405460;padding:6px 10px;background:#f6f6f7;border-radius:43px}.table-block__date::before{content:"";width:16px;height:16px;background:url(../images/table-icon-done.svg) no-repeat center/contain}.table-block__wrap{padding-top:22px;width:100%}.table-block ul{padding:0;display:grid;grid-template-columns:auto auto;grid-template-rows:1fr;gap:20px;margin:-1px 0 0;font-size:20px;line-height:140%;font-weight:400;color:#102938;border-top:1px solid #cfd4d7;border-bottom:1px solid #cfd4d7}.table-block li{display:flex;justify-content:center;align-items:center;padding:13.5px 20px}.table-block li:first-child{justify-content:flex-start}.table-block li:last-child{justify-content:flex-end;text-align:right;font-weight:700}.table-block__top{font-size:16px!important;line-height:150%!important;font-weight:400!important;color:#6f7f87!important;text-transform:none!important;border-top:none!important}.table-block__top li:last-child{font-weight:400!important}.table-block__item{gap:0!important;flex-direction:column}.table-block__body,.table-block__item{display:flex!important}.table-block__body,.table-block__head{padding:0!important}.table-block__body-content,.table-block__head-content{width:100%;border:0!important}.table-block__head{cursor:pointer}.table-block__head.open{background:#f8f8f8!important}.table-block__head.open .table-block__head-content li:first-child::after{transform:rotate(-180deg)}.table-block__head:hover li:first-child{color:#009cd9}.table-block__head-content li:first-child{display:inline-flex;justify-content:flex-start;align-items:center;gap:10px;transition:color .3s ease}.table-block__head-content li:first-child::after{content:"";width:12px;height:7px;background:url(../images/table-icon-arrow.svg);transition:transform .3s ease}.table-block__body{flex-direction:column}.table-block__body-content{overflow:hidden;max-height:0;transition:max-height .3s}.table-block__body-content.open{background:#f8f8f8}.table-block__body-content li{font-size:16px;line-height:150%;font-weight:400;padding-top:8.5px}.table-block__body-content li:first-child{text-align:left!important}.table-block__body-content li:last-child{font-weight:400!important}.table-block__info{display:flex;justify-content:center;align-items:center;gap:10px;font-weight:700;font-size:20px;line-height:130%;letter-spacing:.01em;color:#102938;background:#f6f6f7;border-radius:8px;padding:15px 10px;margin-top:20px}.table-block__info::before{content:"";width:16px;height:16px;left:10px;top:10px;background:url(../images/table-icon-info.svg)}@media (max-width:1024px){.table-block ul,.table-block__info{font-size:18px}}@media (max-width:768px){.table-block__title-2{padding:0 0 20px!important}.table-block__date{font-size:14px;line-height:140%}.table-block ul{font-size:16px}.table-block__body-content li,.table-block__top{font-size:14px!important}.table-block__body-content li:last-child{font-weight:600!important}.table-block__info{font-size:16px}}@media (max-width:576px){.table-block__title-2{font-size:22px;line-height:125%;padding:0 0 21px!important}.table-block__date{display:flex;justify-content:stretch;border-radius:6px}.table-block__date::before{width:14px;height:14px}.table-block__top{display:none!important}.table-block ul{display:grid;grid-template-columns:1fr;grid-template-rows:auto;gap:5px}.table-block li{align-items:flex-start}.table-block li:first-child{justify-content:flex-start;padding:9px 10px 0}.table-block li:last-child{justify-content:flex-start;text-align:left;padding:0 10px 7px}.table-block__body-content li:first-child{padding:10px 10px 0}.table-block__body-content li:last-child{padding:0 10px 10px}.table-block__info{display:grid;grid-template-columns:16px 1fr;grid-template-rows:auto;align-items:start;border-radius:6px;padding:10px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */